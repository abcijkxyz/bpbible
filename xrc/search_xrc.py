# This file was automatically generated by pywxrc.
# -*- coding: UTF-8 -*-

import wx
import wx.xrc as xrc

__res = None

def get_resources():
    """ This function provides access to the XML resources in this module."""
    global __res
    if __res == None:
        __init_resources()
    return __res




class xrcSearchPanel(wx.Panel):
#!XRCED:begin-block:xrcSearchPanel.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.
        
        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass
        
#!XRCED:end-block:xrcSearchPanel.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PrePanel()
        self.PreCreate(pre)
        get_resources().LoadOnPanel(pre, parent, "SearchPanel")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.panel_1 = xrc.XRCCTRL(self, "panel_1")
        self.searchkey = xrc.XRCCTRL(self, "searchkey")
        self.keyboard_button = xrc.XRCCTRL(self, "keyboard_button")
        self.search_button = xrc.XRCCTRL(self, "search_button")
        self.genindex = xrc.XRCCTRL(self, "genindex")
        self.collapsible_panel = xrc.XRCCTRL(self, "collapsible_panel")
        self.options_holder = xrc.XRCCTRL(self, "options_holder")
        self.search_label = xrc.XRCCTRL(self, "search_label")
        self.save_results_button = xrc.XRCCTRL(self, "save_results_button")
        self.maybe_incorrect_results_label = xrc.XRCCTRL(self, "maybe_incorrect_results_label")
        self.search_splitter = xrc.XRCCTRL(self, "search_splitter")
        self.verselist = xrc.XRCCTRL(self, "verselist")
        self.versepreview = xrc.XRCCTRL(self, "versepreview")
        self.progressbar = xrc.XRCCTRL(self, "progressbar")
        self.wxID_CLOSE = xrc.XRCCTRL(self, "wxID_CLOSE")



class xrcOptionsPanel(wx.Panel):
#!XRCED:begin-block:xrcOptionsPanel.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.
        
        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass
        
#!XRCED:end-block:xrcOptionsPanel.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PrePanel()
        self.PreCreate(pre)
        get_resources().LoadOnPanel(pre, parent, "OptionsPanel")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.options_panel = xrc.XRCCTRL(self, "options_panel")
        self.gui_search_type = xrc.XRCCTRL(self, "gui_search_type")
        self.proximity = xrc.XRCCTRL(self, "proximity")
        self.proximity_type = xrc.XRCCTRL(self, "proximity_type")
        self.case_sensitive = xrc.XRCCTRL(self, "case_sensitive")



class xrcRangePanel(wx.Panel):
#!XRCED:begin-block:xrcRangePanel.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.
        
        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass
        
#!XRCED:end-block:xrcRangePanel.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PrePanel()
        self.PreCreate(pre)
        get_resources().LoadOnPanel(pre, parent, "RangePanel")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.wholebible = xrc.XRCCTRL(self, "wholebible")
        self.oldtestament = xrc.XRCCTRL(self, "oldtestament")
        self.newtestament = xrc.XRCCTRL(self, "newtestament")
        self.dummy_radio = xrc.XRCCTRL(self, "dummy_radio")
        self.range_top = xrc.XRCCTRL(self, "range_top")
        self.range_bottom = xrc.XRCCTRL(self, "range_bottom")
        self.label_2 = xrc.XRCCTRL(self, "label_2")
        self.custom_range = xrc.XRCCTRL(self, "custom_range")





# ------------------------ Resource data ----------------------

def __init_resources():
    global __res
    __res = xrc.EmptyXmlResource()

    __res.Load('search.xrc')

# ----------------------- Gettext strings ---------------------

def __gettext_strings():
    # This is a dummy function that lists all the strings that are used in
    # the XRC file in the _("a string") format to be recognized by GNU
    # gettext utilities (specificaly the xgettext utility) and the
    # mki18n.py script.  For more information see:
    # http://wiki.wxpython.org/index.cgi/Internationalization 
    
    def _(str): pass
    
    _("&Find:")
    _("Words to search for")
    _("Open the Virtual Keyboard")
    _("&Search")
    _("Search for given words now")
    _("&Index")
    _("Search Options")
    _("0 references found")
    _("Save Results")
    _("Warning: This book contains invalid XML, so searching on fields may not work or may not display all matches in this book.")
    _("&Close")
    _("Search &Type:")
    _("Indexed")
    _("Unindexed")
    _("Type of search to use")
    _("Proximity:")
    _("How close should search terms be to each other")
    _("Words")
    _("Verses")
    _("Case sensitive")
    _("Match only if case is same")
    _("Search Options")
    _("Whole &Bible")
    _("&Old Testament")
    _("&New Testament")
    _("DUMMY")
    _("Custom &Range:")
    _("Search Range")

